{"version":3,"sources":["components/playerList.js","components/chat.js","context/gameContext.js","components/rooms.js","components/game.js","components/pong.js","App.js","reportWebVitals.js","index.js"],"names":["PlayerList","props","useState","Card","Body","className","Title","Object","keys","players","map","key","Text","name","Chat","messageToSend","setMessageToSend","useEffect","elem","document","getElementById","scrollTop","scrollHeight","messages","sendKeyEvent","e","trim","preventDefault","click","addEventListener","removeEventListener","style","marginRight","id","whiteSpace","overflowY","height","Form","fontSize","join","Container","margin","Control","type","value","onChange","target","Button","disabled","marginLeft","onClick","message","sendMessage","console","log","GameContext","React","createContext","reducer","state","action","isConnected","payload","player","room","rooms","match","socket","socketClient","autoConnect","initialState","GameProvider","useReducer","dispatch","on","receivedMessage","open","Provider","children","emit","createRoom","quitRoom","quitMatch","lastTypeEmited","undefined","Rooms","useContext","Header","width","variant","player1","player2","roomId","display","size","Game","gameConfig","ball","sendKey","x","y","fill","x1","y1","x2","y2","stroke-dasharray","stroke-width","stroke","direction","score1","score2","cx","cy","r","toString","Pong","alignItems","flexDirection","flexWrap","justifyContent","Alert","textAlign","status","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d621235b.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport { Card } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst PlayerList = (props) => {\n    const [players, setPlayers] = useState({});\n\n    return(\n        <div>\n            <Card.Body className=\"bg-light\">\n                <Card.Title>Players List:</Card.Title>\n                {Object.keys(props.players)\n                    .map((key) => (\n                        <Card.Text key={key}>{props.players[key].name}</Card.Text>\n                    ))\n                }\n            </Card.Body>\n        </div>\n    );\n}\n\nexport default PlayerList;","import React, {useState, useEffect} from 'react';\nimport { Card, Button, Form, Container } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Chat = (props) => {\n    \n    const [messages, setMessages] = useState('');\n    const [messageToSend, setMessageToSend] = useState('');\n    \n    const sendMessage = () => {\n        let message = messageToSend.trim();\n\n        if (message){\n            props.sendMessage(message);\n            setMessageToSend('');\n        }else{\n            console.log('Message is empty!')\n        }\n        \n    }\n    \n    useEffect(() => {\n        const elem = document.getElementById('chat-message');\n        elem.scrollTop = elem.scrollHeight\n    }, [props.messages]);\n\n    useEffect(() => {\n        const sendKeyEvent = (e) => {\n\n            const { key } = e;\n\n            switch (key){\n                case 'Enter':\n                    if(!messageToSend.trim()){\n                        e.preventDefault();\n                        document.getElementById(\"sendTheMessage\").click();\n                    }\n                    break;\n            }\n        };\n\n        document.addEventListener('keyup', sendKeyEvent);\n\n        return () => {\n            document.removeEventListener('keyup', sendKeyEvent);\n        };\n         \n    }, [])\n    \n    return(\n        <Card style={{ marginRight: '2%'}} className=\" bg-light container d-flex flex-column\">\n            <div id=\"chat-message\" style={{whiteSpace: 'pre-wrap', overflowY: 'auto', height: '100vh'}}>\n                <Form.Text style={{whiteSpace: 'pre-wrap', fontSize: '1.1rem'}}>{props.messages.join('\\n')}</Form.Text>\n            </div>\n            <Container style={{margin: '1%'}} className=\"d-flex flex-column align-bottom\">\n                <div className=\"form align-bottom d-flex flex-row\">\n                    <Form.Control className=\"align-self-start\" type=\"text\" value={messageToSend}\n                    onChange={(e) => setMessageToSend(e.target.value)} />\n\n                        <Button id=\"sendTheMessage\" disabled={!messageToSend.trim()} style={{marginLeft: '6px'}} className=\"align-self-end\" onClick={sendMessage}>Send</Button>\n                </div>\n            </Container>    \n        </Card>\n    );\n}\n\n\nexport { Chat };","import React, {useReducer, useEffect} from 'react';\nimport socketClient from 'socket.io-client';\n\nconst GameContext = React.createContext();\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'CONNECTED':\n            return {\n                ...state,\n                isConnected: action.payload\n            };\n        case 'PLAYERS':\n            return {\n                ...state,\n                players: action.payload\n            }\n        case 'PLAYER':\n            return {\n                ...state,\n                player: action.payload\n            }\n        case 'ROOM':\n            return {\n                ...state,\n                room: state.rooms[state.players[action.payload].room]\n            }\n        case 'ROOMS':\n            return {\n                ...state,\n                rooms: action.payload\n            }\n        case 'ADD_MESSAGES':\n            return {\n                ...state,\n                messages: [...state.messages, action.payload]\n            }\n        case 'MATCH':\n            return {\n                ...state,\n                match: action.payload\n            }\n        default:\n            return state;\n    }\n};\n\nconst socket = socketClient('https://evening-fortress-93254.herokuapp.com:35270', {\n    autoConnect: false,\n});\n\n\nconst initialState ={\n    isConnected: false,\n    player: {},\n    room: {},\n    rooms: {},\n    players: {},\n    messages: [],\n    match: {}\n}\n\nconst GameProvider = (props) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    \n    useEffect(() =>{\n        socket.on('connect', () => {\n            console.log('Connected!');\n            dispatch({type: 'CONNECTED', payload: true});\n        });\n        socket.on('disconnect', () => {\n            dispatch({type: 'CONNECTED', payload: false});\n\n        })\n        socket.on('PlayerRefresh', (players) => {\n            dispatch({type: 'PLAYERS', payload: players});\n            dispatch({type: 'PLAYER', payload: players[socket.id]});\n\n        })\n        socket.on('ReceiveMessage', (receivedMessage) =>{\n            dispatch({type: 'ADD_MESSAGES', payload: receivedMessage});\n        });\n        socket.on('RoomsRefresh', (players) => {\n            dispatch({type: 'ROOMS', payload: players});\n            dispatch({type: 'ROOM', payload: socket.id});\n        })\n        socket.on('MatchRefresh', (match) => {\n            dispatch({type: 'MATCH', payload: match});\n        })\n        socket.open();\n    }, []);\n\n    \n    return(\n        <GameContext.Provider value={state}>\n            {props.children}\n        </GameContext.Provider>\n    );\n}\n\nconst sendMessage = (message) => {\n    socket.emit('SendMessage', message);\n}\n\nconst createRoom = () => {\n    socket.emit('CreateRoom');\n}\n\nconst quitRoom = () => {\n    socket.emit('QuitRoom');\n}\n\nconst quitMatch = () => {\n    socket.emit('QuitMatch');\n}\n\nconst startGame = (roomId) => {\n    socket.emit('StartGame', roomId);\n}\n\nconst joinRoom = (roomId) => {\n    socket.emit('JoinRoom', roomId);\n}\nconst gameLoaded = () => {\n    socket.emit('GameLoaded')\n}\n\nlet lastTypeEmited = undefined;\nconst sendKey = (type, key) => {\n    if(lastTypeEmited === type){\n        return;\n    }\n\n    lastTypeEmited = type;\n    socket.emit('SendKey', {type: type, key: key})\n};\n\nexport {GameContext, \n    GameProvider, \n    sendMessage, \n    createRoom, \n    quitRoom,\n    quitMatch,\n    joinRoom,\n    startGame,\n    gameLoaded, \n    sendKey\n};","import React, { useContext } from 'react';\nimport { Card, Form, Button } from 'react-bootstrap';\nimport { GameContext, createRoom, quitRoom, joinRoom, startGame } from '../context/gameContext';\n\nconst Rooms = () => {\n\n    const { player, rooms, room } = useContext(GameContext);\n    return (\n        <Card.Header style={{ width: '100%'}} className=\"d-flex align-self-center justify-content-center align-items-center bg-light\" >\n                {!player.room\n                ?\n                    <div style={{ display: 'grid', width: '100%'}}>\n                        <Button className=\"button-default\" variant=\"outline-secondary\" onClick={createRoom}>Create Room</Button>\n                        <Card.Title>\n                            Rooms:\n                        </Card.Title>\n                        {Object.keys(rooms).map((key) =>\n                        <Card.Text key={`room_${key}`}>\n                            {rooms[key].name}\n                            <Button style={{ margin: '0.3rem'}} size=\"sm\" variant=\"outline-primary\" onClick={() => joinRoom(key)} disabled={rooms[key].player1 && rooms[key].player2}>Join Room</Button>  \n                        </Card.Text>)}\n                    </div>\n                :\n                    <div style={{ width: '100%'}}>\n                        <Card.Title>\n                            {room!=undefined &&\n                            room.name\n                            }\n                        </Card.Title>\n\n                            <Button className=\"button-default\" variant=\"outline-danger\" onClick={quitRoom}>Quit Room</Button>\n                            {rooms[player.room] && rooms[player.room].player1 && rooms[player.room].player2 \n                                ?<Button className=\"button-default\" variant=\"outline-success\" onClick={() => startGame()}>Start Game</Button>\n                                :<Card.Text>Waiting for another player to join. </Card.Text>\n                                \n                            }\n                    </div>\n\n                }\n        </Card.Header>\n    )\n}\n\nexport default Rooms;","import React, { useEffect, useContext } from 'react';\nimport SVG, {Circle, Rect, Line} from 'react-svg-draw';\nimport { GameContext, gameLoaded, quitMatch, sendKey } from '../context/gameContext';\nimport { Button } from 'react-bootstrap';\n\nconst Game = () => {\n\n    const { match } = useContext(GameContext);\n    const { gameConfig, ball, message, player1, player2 } = match;\n\n    useEffect(() => {\n        gameLoaded();\n\n        const sendKeyEvent = (e) => {\n\n            const { key, type } = e;\n\n            switch (key){\n                case 'ArrowUp':\n                case 'ArrowDown':\n                    sendKey(type,key);\n                    e.preventDefault();\n                    break;\n            }\n        };\n        \n\n        document.addEventListener('keydown', sendKeyEvent);\n        document.addEventListener('keyup', sendKeyEvent);\n\n        return () => {\n            document.removeEventListener('keydown', sendKeyEvent);\n            document.removeEventListener('keyup', sendKeyEvent);\n        };\n         \n    }, []);\n\n\n\n    return (\n    \n        <div>\n        \n            <SVG width={gameConfig.width} height={gameConfig.height}>\n                <Rect\n                    x=\"0\" \n                    y=\"0\"\n                    width={gameConfig.width}\n                    height={gameConfig.height}\n                    style={{fill: '#000'}}\n                />\n                <Line\n                    x1={gameConfig.width / 2}\n                    y1=\"0\"\n                    x2={gameConfig.width / 2}\n                    y2={gameConfig.height}\n                    stroke-dasharray=\"5,5\"\n                    stroke-width=\"5\"\n                    style={{stroke: '#ffffff80'}}\n                />\n                <text \n                    x={gameConfig.width / 2 - 20 }\n                    y=\"45\"\n                    style={{direction: 'rtl', fill: '#ffffffB3', fontSize: '50px'}}\n                >\n                {match.score1}\n                </text>\n                <text \n                    x={gameConfig.width / 2 + 20 }\n                    y=\"45\"\n                    style={{ fill: '#ffffffB3', fontSize: '50px'}}\n                >\n                {match.score2}\n                </text>\n                {ball && \n                    <Circle\n                        cx={ball.x}\n                        cy={ball.y}\n                        r={ball.width}\n                        style={{fill: '#ffffff'}}\n                    />\n                }\n                {player1 &&\n                    <Rect\n                        x={player1.x.toString()}\n                        y={player1.y.toString()}\n                        width={player1.width.toString()}\n                        height={player1.height.toString()}\n                        style={{fill: '#ffffff'}}\n                    />\n                }\n                {player2 &&\n\n                        <Rect\n                            x={player2.x.toString()}\n                            y={player2.y.toString()}\n                            width={player2.width.toString()}\n                            height={player2.height.toString()}\n                            style={{fill: '#ffffff'}}\n                        />\n                }\n            </SVG>\n            {message &&\n                <div className=\"game-message\">\n                    <h4>{message}</h4>\n                    <Button className=\"button-default\" variant=\"outline-danger\" onClick={quitMatch}>Quit</Button>\n                </div>\n            }\n        </div>\n    )\n    \n\n\n}\n\nexport { Game };","import React, {useContext} from 'react';\nimport PlayerList from './playerList';\nimport { Chat } from './chat';\nimport { GameContext, sendMessage } from '../context/gameContext';\nimport { Card, Container, Alert } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Rooms from './rooms'\nimport { Game } from './game';\n\nconst Pong = () => {\n    const { isConnected, players, messages, match } = useContext(GameContext)\n    \n    return(\n        <div className=\"d-flex flex-row bg-light\" style={{margin: '2vh auto', width: '100%', height: '95vh'}}> \n            {!isConnected && \n                <div className=\"fixed-top\" style={{ alignItems: 'center', display: 'flex', flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'center'}}>\n                    <Alert style={{margin: '1.2vh', textAlign: 'center'}} variant=\"info\">Connecting...</Alert>\n                </div>\n            }\n\n            {match.status === 'START'\n                &&\n                <div className=\"d-flex flex-row justify-content-center align-items-center flex-wrap game-loaded-container\" ><Game/></div>\n\n            }\n\n            {match.status === 'PLAY'\n                &&\n                <div className=\"d-flex flex-row justify-content-center align-items-center flex-wrap game-loaded-container\" ><Game/></div>\n\n            }\n\n            {match.status !== 'PLAY' && match.status !== 'START'   \n                &&\n                <>               \n                    <Container style={{ width: '35%', marginLeft: '2%', height: '95vh'}} className=\"align-self-start align-items-center bg-light\">\n                        <Card className=\"justify-content-start bg-light\" style={{height: '95vh'}}>\n                            <Rooms/>\n                            <PlayerList players={players}/>\n                        </Card>\n                    </Container>\n                    <Chat sendMessage={sendMessage} messages={messages}/>\n                </>\n            \n            }\n        </div> \n        \n    );\n}\n\nexport default Pong;","import './App.css';\nimport Pong from './components/pong'\nimport {GameProvider} from './context/gameContext'\n\nfunction App() {\n  return (\n    <div className=\"App bg-light\">\n      <GameProvider>\n        <Pong />\n      </GameProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      });\n    }\n  };\n  \n  export default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n  \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}