[{"C:\\Users\\femar\\Desktop\\Pastas\\pong-game\\multiplayer-pong-game\\game\\src\\index.js":"1","C:\\Users\\femar\\Desktop\\Pastas\\pong-game\\multiplayer-pong-game\\game\\src\\components\\game.js":"2","C:\\Users\\femar\\Desktop\\Pastas\\pong-game\\multiplayer-pong-game\\game\\src\\components\\chat.js":"3","C:\\Users\\femar\\Desktop\\Pastas\\pong-game\\multiplayer-pong-game\\game\\src\\context\\gameContext.js":"4","C:\\Users\\femar\\Desktop\\Pastas\\pong-game\\multiplayer-pong-game\\game\\src\\components\\pong.js":"5"},{"size":525,"mtime":1615853865167,"results":"6","hashOfConfig":"7"},{"size":3378,"mtime":1615860642771,"results":"8","hashOfConfig":"7"},{"size":2323,"mtime":1615853865157,"results":"9","hashOfConfig":"7"},{"size":3541,"mtime":1615912940214,"results":"10","hashOfConfig":"7"},{"size":2737,"mtime":1615912834017,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"2k7uin",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\femar\\Desktop\\Pastas\\pong-game\\multiplayer-pong-game\\game\\src\\index.js",[],["24","25"],"C:\\Users\\femar\\Desktop\\Pastas\\pong-game\\multiplayer-pong-game\\game\\src\\components\\game.js",[],"C:\\Users\\femar\\Desktop\\Pastas\\pong-game\\multiplayer-pong-game\\game\\src\\components\\chat.js",["26"],"import React, {useState, useEffect} from 'react';\r\nimport { Card, Button, Form, Container } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Chat = (props) => {\r\n    \r\n    const [messageToSend, setMessageToSend] = useState('');\r\n    \r\n    const sendMessage = () => {\r\n        let message = messageToSend.trim();\r\n\r\n        if (message){\r\n            props.sendMessage(message);\r\n            setMessageToSend('');\r\n        }else{\r\n            console.log('Message is empty!')\r\n        }\r\n        \r\n    }\r\n    \r\n    useEffect(() => {\r\n        const elem = document.getElementById('chat-message');\r\n        elem.scrollTop = elem.scrollHeight\r\n    }, [props.messages]);\r\n\r\n    useEffect(() => {\r\n        const sendKeyEvent = (e) => {\r\n\r\n            const { key } = e;\r\n\r\n            switch (key){\r\n                case 'Enter':\r\n                    if(!messageToSend.trim()){\r\n                        e.preventDefault();\r\n                        document.getElementById(\"sendTheMessage\").click();\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        };\r\n\r\n        document.addEventListener('keyup', sendKeyEvent);\r\n\r\n        return () => {\r\n            document.removeEventListener('keyup', sendKeyEvent);\r\n        };\r\n         \r\n    }, [])\r\n    \r\n    return(\r\n        <Card style={{ marginRight: '2%'}} className=\" bg-light container d-flex flex-column\">\r\n            <div id=\"chat-message\" style={{whiteSpace: 'pre-wrap', overflowY: 'auto', height: '100vh'}}>\r\n                <Form.Text style={{whiteSpace: 'pre-wrap', fontSize: '1.1rem'}}>{props.messages.join('\\n')}</Form.Text>\r\n            </div>\r\n            <Container style={{margin: '1%'}} className=\"d-flex flex-column align-bottom\">\r\n                <div className=\"form align-bottom d-flex flex-row\">\r\n                    <Form.Control className=\"align-self-start\" type=\"text\" value={messageToSend}\r\n                    onChange={(e) => setMessageToSend(e.target.value)} />\r\n\r\n                        <Button id=\"sendTheMessage\" disabled={!messageToSend.trim()} style={{marginLeft: '6px'}} className=\"align-self-end\" onClick={sendMessage}>Send</Button>\r\n                </div>\r\n            </Container>    \r\n        </Card>\r\n    );\r\n}\r\n\r\n\r\nexport { Chat };","C:\\Users\\femar\\Desktop\\Pastas\\pong-game\\multiplayer-pong-game\\game\\src\\context\\gameContext.js",[],"C:\\Users\\femar\\Desktop\\Pastas\\pong-game\\multiplayer-pong-game\\game\\src\\components\\pong.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":49,"column":8,"nodeType":"33","endLine":49,"endColumn":10,"suggestions":"34"},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'messageToSend'. Either include it or remove the dependency array.","ArrayExpression",["37"],"no-global-assign","no-unsafe-negation",{"desc":"38","fix":"39"},"Update the dependencies array to be: [messageToSend]",{"range":"40","text":"41"},[1341,1343],"[messageToSend]"]