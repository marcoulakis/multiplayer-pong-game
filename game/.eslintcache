[{"/home/marcoulakis/Desktop/multiplayer-pong-game/game/src/index.js":"1","/home/marcoulakis/Desktop/multiplayer-pong-game/game/src/components/playerList.js":"2","/home/marcoulakis/Desktop/multiplayer-pong-game/game/src/components/rooms.js":"3","/home/marcoulakis/Desktop/multiplayer-pong-game/game/src/components/pong.js":"4","/home/marcoulakis/Desktop/multiplayer-pong-game/game/src/context/gameContext.js":"5","/home/marcoulakis/Desktop/multiplayer-pong-game/game/src/reportWebVitals.js":"6","/home/marcoulakis/Desktop/multiplayer-pong-game/game/src/components/game.js":"7","/home/marcoulakis/Desktop/multiplayer-pong-game/game/src/App.js":"8","/home/marcoulakis/Desktop/multiplayer-pong-game/game/src/components/chat.js":"9"},{"size":506,"mtime":1615393724831,"results":"10","hashOfConfig":"11"},{"size":555,"mtime":1615419208058,"results":"12","hashOfConfig":"11"},{"size":2102,"mtime":1615419241634,"results":"13","hashOfConfig":"11"},{"size":2826,"mtime":1615480888835,"results":"14","hashOfConfig":"11"},{"size":3434,"mtime":1615481201223,"results":"15","hashOfConfig":"11"},{"size":385,"mtime":1615390176055,"results":"16","hashOfConfig":"11"},{"size":3272,"mtime":1615430487314,"results":"17","hashOfConfig":"11"},{"size":271,"mtime":1615390176055,"results":"18","hashOfConfig":"11"},{"size":2255,"mtime":1615422370726,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"z0f6h2",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},"/home/marcoulakis/Desktop/multiplayer-pong-game/game/src/index.js",[],["40","41"],"/home/marcoulakis/Desktop/multiplayer-pong-game/game/src/components/playerList.js",[],"/home/marcoulakis/Desktop/multiplayer-pong-game/game/src/components/rooms.js",[],"/home/marcoulakis/Desktop/multiplayer-pong-game/game/src/components/pong.js",["42","43","44"],"/home/marcoulakis/Desktop/multiplayer-pong-game/game/src/context/gameContext.js",[],"/home/marcoulakis/Desktop/multiplayer-pong-game/game/src/reportWebVitals.js",[],"/home/marcoulakis/Desktop/multiplayer-pong-game/game/src/components/game.js",[],"/home/marcoulakis/Desktop/multiplayer-pong-game/game/src/App.js",[],"/home/marcoulakis/Desktop/multiplayer-pong-game/game/src/components/chat.js",["45"],"import React, {useState, useEffect} from 'react';\nimport { Card, Button, Form, Container } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Chat = (props) => {\n    \n    const [messageToSend, setMessageToSend] = useState('');\n    \n    const sendMessage = () => {\n        let message = messageToSend.trim();\n\n        if (message){\n            props.sendMessage(message);\n            setMessageToSend('');\n        }else{\n            console.log('Message is empty!')\n        }\n        \n    }\n    \n    useEffect(() => {\n        const elem = document.getElementById('chat-message');\n        elem.scrollTop = elem.scrollHeight\n    }, [props.messages]);\n\n    useEffect(() => {\n        const sendKeyEvent = (e) => {\n\n            const { key } = e;\n\n            switch (key){\n                case 'Enter':\n                    if(!messageToSend.trim()){\n                        e.preventDefault();\n                        document.getElementById(\"sendTheMessage\").click();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        };\n\n        document.addEventListener('keyup', sendKeyEvent);\n\n        return () => {\n            document.removeEventListener('keyup', sendKeyEvent);\n        };\n         \n    }, [])\n    \n    return(\n        <Card style={{ marginRight: '2%'}} className=\" bg-light container d-flex flex-column\">\n            <div id=\"chat-message\" style={{whiteSpace: 'pre-wrap', overflowY: 'auto', height: '100vh'}}>\n                <Form.Text style={{whiteSpace: 'pre-wrap', fontSize: '1.1rem'}}>{props.messages.join('\\n')}</Form.Text>\n            </div>\n            <Container style={{margin: '1%'}} className=\"d-flex flex-column align-bottom\">\n                <div className=\"form align-bottom d-flex flex-row\">\n                    <Form.Control className=\"align-self-start\" type=\"text\" value={messageToSend}\n                    onChange={(e) => setMessageToSend(e.target.value)} />\n\n                        <Button id=\"sendTheMessage\" disabled={!messageToSend.trim()} style={{marginLeft: '6px'}} className=\"align-self-end\" onClick={sendMessage}>Send</Button>\n                </div>\n            </Container>    \n        </Card>\n    );\n}\n\n\nexport { Chat };",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":4,"column":36,"nodeType":"52","messageId":"53","endLine":4,"endColumn":45},{"ruleId":"50","severity":1,"message":"54","line":5,"column":41,"nodeType":"52","messageId":"53","endLine":5,"endColumn":52},{"ruleId":"50","severity":1,"message":"55","line":15,"column":11,"nodeType":"52","messageId":"53","endLine":15,"endColumn":22},{"ruleId":"56","severity":1,"message":"57","line":49,"column":8,"nodeType":"58","endLine":49,"endColumn":10,"suggestions":"59"},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'quitMatch' is defined but never used.","Identifier","unusedVar","'ToastHeader' is defined but never used.","'toggleShowA' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'messageToSend'. Either include it or remove the dependency array.","ArrayExpression",["62"],"no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},"Update the dependencies array to be: [messageToSend]",{"range":"65","text":"66"},[1293,1295],"[messageToSend]"]